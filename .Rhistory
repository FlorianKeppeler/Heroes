mar=c(8,3,1,1))
#
# check_skalen(data=data,
#              skalen_scores=skalen_scores,
#              variables=names(skalen),
#              pred_var=pred_var,
#              score_type = "scores_mean",
#              group_names = imp_names)
#
# check_skalen(data=data,
#              skalen_scores=skalen_scores,
#              variables="Paed.Halt.2",
#              pred_var=pred_var,
#              score_type = "scores_mean",
#              group_names = imp_names)
# Faktorladungen pro Skala
check_loadings(skalen_scores)
# wichtigste Haltekraft nach Abgleich mit tatsächlicher Haltekraft für verschiedene Gruppierungen
group_list = list("Alle" = 1:5, "SBBZ" = 2, "Leitung" = 1, "HZE" = 3:5)
ums_data = create_ums_data(data, umsetzung)
plot_combined_imp(skalen, data, skalen_scores,
umsetzung, ums_data, group_list)
# Vergleiche der Skalen unter den Gruppen:
plot_group_diff(skalen, umsetzung, ums_data, group_list = list("SBBZ" = 2,"HZE" = 3:5))
plot_group_diff(skalen, umsetzung, ums_data, group_list = list("Leitung" = 1,"Mitarbeiter" = 2:5))
# Umsetzungsscores für RF generieren:
ums_scores = get_ums_scores(ums_data, skalen = data_skalen, names(data_skalen))
hist(ums_scores[["Transparenz.jM"]]$scores_mean)
hist(skalen_scores[["Transparenz.jM"]]$scores_mean)
skalen_scores[["Haltekraft"]]$scores_mean
ums_scores[["Haltekraft"]]$scores_mean
Halte_scores = get_skalen_scores(data = data,
skalen = data_skalen,
skalen_names = "Haltekraft")
ums_scores[["Haltekraft"]] = Halte_scores[["Haltekraft"]]
ums_scores[["Haltekraft"]]$scores_mean
hist(ums_scores[["Transparenz.jM"]]$scores_mean)
hist(skalen_scores[["Transparenz.jM"]]$scores_mean)
ums_scores[["Haltekraft"]]$scores_mean
plot(ums_scores[["Haltekraft"]]$scores_mean ~ skalen_scores[["Transparenz.jM"]]$scores_mean,
ylab="Haltekraft", xlab ="Transparenz.jM")
plot(ums_scores[["Haltekraft"]]$scores_mean ~ jitter(skalen_scores[["Transparenz.jM"]]$scores_mean),
ylab="Haltekraft", xlab ="Transparenz.jM")
plot(ums_scores[["Haltekraft"]]$scores_mean ~ jitter(ums_scores[["Transparenz.jM"]]$scores_mean),
ylab="Haltekraft", xlab ="Transparenz.jM")
# -> wahrscheinlich finden das eben alle wichtig und bereits gut umgesetzt
mean(ums_scores[["Transparenz.jM"]]$scores_mean)
create_skalen_imp(score_type = "scores_mean", skalen_scores = ums_scores, group_index = get_index_by_group(data, c(1:5)))
skalen_imp = create_skalen_imp(score_type = "scores_mean", skalen_scores = ums_scores, group_index = get_index_by_group(data, c(1:5)))
skalen_imp = skalen_imp[-1,]
skalen_imp
plot(skalen_imp)
plot(skalen_imp[,2])
plot(skalen_imp[,2], ylim=c(0,1))
plot_skalen_imp(create_skalen_imp(score_type = "scores_mean",
skalen_scores = skalen_scores,
group_index=get_index_by_group(data, group_index = c(1:5))),
mar=c(8,3,1,1))
plot_skalen_imp(skalen_imp, mar=c(8,3,1,1), main="")
plot_skalen_imp(skalen_imp, mar=c(8,3,4,1), ylim=c(0,1), main="Am meisten umgesetzt")
plot_skalen_imp = function(most_imp, mar, ylim, main){
par(mfrow=c(1,1), mar=mar)
plot(most_imp[,2], xaxt="n", xlab="", pch=20, ylim=c(1, 6), main=main)
axis(side=1, at=1:nrow(most_imp), labels = most_imp[,1], las=2)
arrows(x0 = 1:nrow(most_imp), y0 = rep(0, nrow(most_imp)),
y1 = most_imp[,2], col="grey50", length = 0)
points(1:nrow(most_imp), most_imp[,2], pch = 20)
}
plot_skalen_imp(skalen_imp, mar=c(8,3,4,1), ylim=c(0,1), main="Am meisten umgesetzt")
plot_skalen_imp = function(most_imp, mar, ylim, main){
par(mfrow=c(1,1), mar=mar)
plot(most_imp[,2], xaxt="n", xlab="", pch=20, ylim=ylim, main=main)
axis(side=1, at=1:nrow(most_imp), labels = most_imp[,1], las=2)
arrows(x0 = 1:nrow(most_imp), y0 = rep(0, nrow(most_imp)),
y1 = most_imp[,2], col="grey50", length = 0)
points(1:nrow(most_imp), most_imp[,2], pch = 20)
}
plot_skalen_imp(skalen_imp, mar=c(8,3,4,1), ylim=c(0,1), main="Am meisten umgesetzt")
plot_skalen_imp(skalen_imp,
mar=c(8,3,4,1),
ylim=c(0,1),
main="bereits umgesetzt")
rfm_import
source("C:/Heroes/Funktionen.R")
source("C:/Heroes/keys.R")
library(randomForest)
data = import_data_surv(Path="C:/Heroes/Downloads soscisurvey/CSV/data_HerOEs_2023-08-27_16-42.csv")
data$B101_04
table(data$B101_04)
data$B101_04 == 2
data$B107[data$B101_04 == 2]
data$B103[data$B101_04 == 2]
data$B102[data$B101_04 == 2]
data$B107 == 15
data$B101_4[data$B107 == 15]
data$B107 == 15
data$B101_4[data$B107 == 15]
data$B101_4
data$B101_04[data$B107 == 15]
data$B102[data$B107 == 15]
data$B102[data$B101_04 == 2]
7/407
7/414
table(data$C207_07)
which(data$C207_07)
which(data$C207_07 == 1)
which(data$C207_07 == 0)
which(data$C207_07 == 2)
which(data$B101_04 == 2)
unique(which(data$C207_07 == 2), which(data$B101_04 == 2))
length(unique(which(data$C207_07 == 2), which(data$B101_04 == 2)))
length(c(unique(which(data$C207_07 == 2), which(data$B101_04 == 2))))
length(unique(c(which(data$C207_07 == 2), which(data$B101_04 == 2))))
index = which(data$C207_07 == 2)
data$B102[which(data$C207_07 == 2)]
data$B107[index]
??sqlite
install.packages("RSQLite")
install.packages("RSQLite")
db = RSQLite::dbConnect(drv = "C:/WEHAM_TI_Test/data/weham_input_bund_23032015.sqlite")
db = RSQLite::dbConnect(drv = RSQLite::SQLite(), "C:/WEHAM_TI_Test/data/weham_input_bund_23032015.sqlite")
db
RSQLite::dbGetInfo(db)
RSQLite::dbListTables(db)
wzp = RSQLite::dbGetQuery(db, "SELECT * from WEHAMI_WZP")
head(wzp)
RSQLite::dbDisconnect(db)
db = RSQLite::dbConnect(drv = RSQLite::SQLite(), "C:/WEHAM_TI_Test/out/weham_output_tmpl.sqlite")
RSQLite::dbListTables(db)
wzp = RSQLite::dbGetQuery(db, "SELECT * from WEHAMO_WZP")
head(wzp)
RSQLite::dbDisconnect(db)
db = RSQLite::dbConnect(drv = RSQLite::SQLite(), "C:/WEHAM_TI_Test/out/weham_output_tmpl.sqlite")
RSQLite::dbListTables(db)
wzp = RSQLite::dbGetQuery(db, "SELECT * from WEHAMO_WZP")
unique(wzp$PJahr)
unique(wzp$AJahr)
skalen
source("C:/Heroes/Funktionen.R")
source("C:/Heroes/keys.R")
library(randomForest)
skalen
unique(c(which(data$C207_07 == 2), which(data$B101_04 == 2)))
data = import_data_surv(Path="C:/Heroes/Downloads soscisurvey/CSV/data_HerOEs_2023-08-27_16-42.csv")
unique(c(which(data$C207_07 == 2), which(data$B101_04 == 2)))
data = data[-unique(c(which(data$C207_07 == 2), which(data$B101_04 == 2))), ]
data
check_items_by_group(data = data,
variables = "Begriffe",
group_index = list(1,2,c(3,4,5),3,c(4,5)),
group_names = imp_names[["B102_edit"]][1:5])
skalen_scores = get_skalen_scores(data = data,
skalen = data_skalen_ohne,
skalen_names =  names(data_skalen_ohne))
data_skalen_ohne = skalen_ohne  # Skalen ohne Haltekraft
names(data_skalen_ohne)
keys[["Begriffe"]]
data[,keys[["Begriffe"]]]
apply(data[,keys[["Begriffe"]]], 2, median)
apply(data[,keys[["Begriffe"]]], 2, median, na.rm=T)
apply(data[,keys[["Begriffe"]]], 2, mean, na.rm=T)
codebook
keys[["Begriffe"]]
source("C:/Heroes/keys.R")
data.frame("mean"=apply(data[,keys[["Begriffe"]]], 2, mean, na.rm=T), "name"=imp_names[["Begriffe"]])
df_begr = data.frame("mean"=apply(data[,keys[["Begriffe"]]], 2, mean, na.rm=T), "name"=imp_names[["Begriffe"]])
df_begr[order(df_begr$mean),]
df_begr[order(df_begr$mean, decreasing = T),]
source("C:/Heroes/Funktionen.R")
get_Begriffe(data)
data$C202_01
unique(data$C202_01)
write.table(unique(data$C202_01), file = "C:/Heroes/Sammlung/sonstige_Begriffe.txt", row.names = F)
write.table(unique(data$C202_01), file = "C:/Heroes/Sammlung/sonstige_Begriffe.txt", row.names = F, col.names = F)
write.table(unique(data$C206_01), file = "C:/Heroes/Sammlung/sonstige_Verhaltensweisen.txt", row.names = F, col.names = F)
write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/sonstige_Infos.txt", row.names = F, col.names = F)
write.table(unique(data$D305_01), file = "C:/Heroes/Sammlung/sonstige_Dokumente.txt", row.names = F, col.names = F)
write.table(unique(data$D306_01), file = "C:/Heroes/Sammlung/sonstige_weitereInfos.txt", row.names = F, col.names = F)
source("C:/Heroes/keys.R")
source("C:/Heroes/Funktionen.R")
get_ranking(data, "Begriffe")
write.table(unique(data$D311_01), file = "C:/Heroes/Sammlung/sonstige_VerbAnfr.txt", row.names = F, col.names = F)
write.table(unique(data$D311_01), file = "C:/Heroes/Sammlung/sonstige_VerbesserungAnfrage.txt", row.names = F, col.names = F)
write.table(unique(data$D306_11a), file = "C:/Heroes/Sammlung/sonstige_weitereInfos.txt", row.names = F, col.names = F)
write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/D334_01_sonsige_Anmerkung_VerbesserungAnfrage.txt", row.names = F, col.names = F)
write.table(unique(data$E406_09a), file = "C:/Heroes/Sammlung/E406_09a_sonsige_Vetorecht.txt", row.names = F, col.names = F)
write.table(unique(data$E407_09a), file = "C:/Heroes/Sammlung/E407_09a_sonstige_Vetorempfehlung.txt", row.names = F, col.names = F)
write.table(unique(data$E408_09a), file = "C:/Heroes/Sammlung/E408_09a_sonstige_Aufnahme.txt", row.names = F, col.names = F)
data$E408_09a
data$E408_09
data$E408_09a
data$E408
data$E408_9a
data$E408_09a
data = import_data_surv(Path="C:/Heroes/Downloads soscisurvey/CSV/data_HerOEs_2023-08-27_16-42.csv")
warnings()
data$E403_01
write.table(unique(data$E403_01), file = "C:/Heroes/Sammlung/E403_01_sonstige_Verb_Aufn_Bez.txt", row.names = F, col.names = F)
write.table(unique(data$F505_01), file = "C:/Heroes/Sammlung/F505_01_sonstige_Verb_Setting.txt", row.names = F, col.names = F)
write.table(unique(data$G603_01), file = "C:/Heroes/Sammlung/G603_01_sonstige_Verb_Alltag.txt", row.names = F, col.names = F)
write.table(unique(data$H704_01), file = "C:/Heroes/Sammlung/H704_01_sonstige_Verb_Krisenbew.txt", row.names = F, col.names = F)
write.table(unique(data$H803_01), file = "C:/Heroes/Sammlung/H803_011_sonstige_Verb_Krisenauf.txt", row.names = F, col.names = F)
write.table(unique(data$G603_01), file = "C:/Heroes/Sammlung/G603_01_sonstige_Verb_Betreuungsalltag.txt", row.names = F, col.names = F)
write.table(unique(data$I903_01), file = "C:/Heroes/Sammlung/I903_01_sonstige_Verb_Entlassung.txt", row.names = F, col.names = F)
write.table(unique(data$I905_09a), file = "C:/Heroes/Sammlung/I905_09a_sonstige_Vetoempfehlung_Entlassung.txt", row.names = F, col.names = F)
data$I905_09a
write.table(unique(data$I906_09a), file = "C:/Heroes/Sammlung/I906_09a_sonstige_Entscheidung_Entlassung.txt", row.names = F, col.names = F)
write.table(unique(data$J103_01), file = "C:/Heroes/Sammlung/J103_01_sonstige_Verbesserung_Haltung.txt", row.names = F, col.names = F)
write.table(unique(data$K204_01), file = "C:/Heroes/Sammlung/K204_01_sonstige_Interdisz_Team.txt", row.names = F, col.names = F)
write.table(unique(data$K206_01), file = "C:/Heroes/Sammlung/K206_01_sonstige_Kompetenzen.txt", row.names = F, col.names = F)
data$K208_01
write.table(unique(data$K208_01), file = "C:/Heroes/Sammlung/K208_01_sonstige_Fortbildungen.txt", row.names = F, col.names = F)
write.table(unique(data$K209_01), file = "C:/Heroes/Sammlung/K209_01_sonstige_Verbesserung_Teamqual_Qualifikation.txt", row.names = F, col.names = F)
data$K209_01
unique(data$K209_01)
data$N503_01
write.table(unique(data$N503_01), file = "C:/Heroes/Sammlung/N503_01_sonstige_Anmerkungen_Abschluss.txt", row.names = F, col.names = F)
write.table(unique(data$C202_01), file = "C:/Heroes/Sammlung/C202_01_sonstige_Begriffe.txt", row.names = F, col.names = F)
write.table(unique(data$C206_01), file = "C:/Heroes/Sammlung/C206_01_sonstige_Verhaltensweisen.txt", row.names = F, col.names = F)
write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/D334_01_sonstige_Info_Anmerkung.txt", row.names = F, col.names = F)
write.table(unique(data$D305_01), file = "C:/Heroes/Sammlung/D305_01_sonstige_Dokumente.txt", row.names = F, col.names = F)
write.table(unique(data$D306_11a), file = "C:/Heroes/Sammlung/D306_11a_sonstige_weitereInfos.txt", row.names = F, col.names = F)
write.table(unique(data$D311_01), file = "C:/Heroes/Sammlung/D311_01_sonstige_VerbesserungAnfrage.txt", row.names = F, col.names = F)
write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/D334_01_sonstige_Anmerkung_VerbesserungAnfrage.txt", row.names = F, col.names = F)
write.table(unique(data$E406_09a), file = "C:/Heroes/Sammlung/E406_09a_sonstige_Vetorecht_Aufnahme.txt", row.names = F, col.names = F)
write.table(unique(data$E407_09a), file = "C:/Heroes/Sammlung/E407_09a_sonstige_Vetorempfehlung_Aufnahme.txt", row.names = F, col.names = F)
write.table(unique(data$E403_01), file = "C:/Heroes/Sammlung/E403_01_sonstige_Verb_Aufn_Bez.txt", row.names = F, col.names = F)
write.table(unique(data$F505_01), file = "C:/Heroes/Sammlung/F505_01_sonstige_Verb_Setting.txt", row.names = F, col.names = F)
write.table(unique(data$G603_01), file = "C:/Heroes/Sammlung/G603_01_sonstige_Verb_Alltag.txt", row.names = F, col.names = F)
write.table(unique(data$H704_01), file = "C:/Heroes/Sammlung/H704_01_sonstige_Verb_Krisenbew.txt", row.names = F, col.names = F)
write.table(unique(data$H803_01), file = "C:/Heroes/Sammlung/H803_011_sonstige_Verb_Krisenauf.txt", row.names = F, col.names = F)
write.table(unique(data$I903_01), file = "C:/Heroes/Sammlung/I903_01_sonstige_Verb_Entlassung.txt", row.names = F, col.names = F)
write.table(unique(data$I904_09a), file = "C:/Heroes/Sammlung/I904_09a_sonstige_Vetorecht_Entlassung.txt", row.names = F, col.names = F)
write.table(unique(data$J103_01), file = "C:/Heroes/Sammlung/J103_01_sonstige_Verbesserung_Haltung.txt", row.names = F, col.names = F)
write.table(unique(data$K204_01), file = "C:/Heroes/Sammlung/K204_01_sonstige_Interdisz_Team.txt", row.names = F, col.names = F)
write.table(unique(data$K209_01), file = "C:/Heroes/Sammlung/K209_01_sonstige_Verbesserung_Teamqual_Qualifikation.txt", row.names = F, col.names = F)
write.table(unique(data$N503_01), file = "C:/Heroes/Sammlung/N503_01_sonstige_Anmerkungen_Abschluss.txt", row.names = F, col.names = F)
name = c("lorem ipsum irgendwas \n hier gehts weiter")
plot(name ~ 1)
plot(1 ~ 1)
plot(1 ~ 1, yaxt="n")
plot(1 ~ 1, yaxt="n", ylab="")
axis(2, at =1, labels = name)
axis(2, at =1, labels = name, las= 2)
codebook$Variable == "D206_01"
codebook[codebook$Variable == "D206_01",]
codebook[codebook$Variable == "C206_01",]
codebook[codebook$Variable == "C205_01",]
codebook[codebook$Variable == "C205_01", "Variable Label"]
a = codebook[codebook$Variable == "C205_01", "Variable Label"]
a[1]
":" in a[1]
":" %in% a[1]
strsplit(a[1], ":")
c = strsplit(a[1], ":")
c[length(c)]
c[length(c[[1]])]
c[[1]]
length(c[[1]])
c[[1]][length(c[[1]])]
lapply(a, FUN = function(x){c = strsplit(a[1], ":"); return(c[[1]][length(c[[1]])])})
a = codebook[codebook$Variable == "C205_01", "Variable Label"][1]
lapply(a, FUN = function(x){c = strsplit(a[1], ":"); return(c[[1]][length(c[[1]])])})
a
c = strsplit(a, ":")
c
c = unlist(strsplit(a, ":"))
c
c[length(c)]
c = unlist(strsplit(a, ":")); c[length(c)]
c = unlist(strsplit(a, ":")); c = c[length(c)]
unlist(strsplit(c, " "))
unlist(strsplit(c, " "))[-1]
paste(unlist(strsplit(c, " "))[-1], " ")
paste(unlist(strsplit(c, " "))[-1])
paste(unlist(strsplit(c, " "))[-1], collapse = " ")
c = unlist(strsplit(c, " "))[-1]
c
nchar(c)
get_ranking(data, "Begriffe")
ranked = get_ranking(data, "Begriffe")
ranked
plot(ranked$mean)
plot(ranked$mean, xaxt = "n", xlab = "")
axis(1, las=2, at = 1:nrow(mean), labels = ranked$name)
axis(1, las=2, at = 1:nrow(ranked), labels = ranked$name)
par(mar=c(10,4,3,3))
plot(ranked$mean, xaxt = "n", xlab = "")
axis(1, las=2, at = 1:nrow(ranked), labels = ranked$name)
par(mar=c(18,4,3,3))
plot(ranked$mean, xaxt = "n", xlab = "")
axis(1, las=2, at = 1:nrow(ranked), labels = ranked$name)
plot(ranked$mean, xaxt = "n", xlab = "", pch = 20)
par(mar=c(18,4,3,3))
plot(ranked$mean, xaxt = "n", xlab = "", pch = 20)
arrows(x0 = 1:nrow(ranked), y0 = rep(0, nrow(ranked)),
y1 = ranked[,2], col="grey50", length = 0)
ranked[,1]
1:nrow(ranked)
rep(0, nrow(ranked))
ranked[,1]
arrows(x0 = 1:nrow(ranked), y0 = rep(0, nrow(ranked)),
y1 = ranked[,1], col="grey50", length = 0)
arrows(x0 = 1:nrow(ranked), y0 = rep(0, nrow(ranked)),
y1 = ranked[,1], col="grey50", length = 0, lwd=2)
points(ranked$mean,  pch = 20)
axis(1, las=2, at = 1:nrow(ranked), labels = ranked$name)
get_codebook_varnames = function(var_name){
tmp = c()
for (var in keys[[var_name]]){
a = codebook[codebook$Variable == var, "Variable Label"][1]
c = unlist(strsplit(a, ":")); c = c[length(c)]
c = unlist(strsplit(c, " "))[-1]
c = paste(unlist(strsplit(c, " "))[-1], collapse = " ")
tmp = c(tmp, c)
}
return(mp)
}
get_codebook_varnames("Begriffe")
get_codebook_varnames = function(var_name){
tmp = c()
for (var in keys[[var_name]]){
a = codebook[codebook$Variable == var, "Variable Label"][1]
c = unlist(strsplit(a, ":")); c = c[length(c)]
c = unlist(strsplit(c, " "))[-1]
c = paste(unlist(strsplit(c, " "))[-1], collapse = " ")
tmp = c(tmp, c)
}
return(tmp)
}
get_codebook_varnames("Begriffe")
var_name = "Begriffe"
tmp = c()
get_codebook_varnames = function(var_name){
tmp = c()
for (var in keys[[var_name]]){
a = codebook[codebook$Variable == var, "Variable Label"][1]
print(a)
c = unlist(strsplit(a, ":")); c = c[length(c)]
c = unlist(strsplit(c, " "))[-1]
c = paste(unlist(strsplit(c, " "))[-1], collapse = " ")
tmp = c(tmp, c)
}
return(tmp)
}
get_codebook_varnames(var_name = "Begriffe")
get_codebook_varnames = function(var_name){
tmp = c()
for (var in keys[[var_name]]){
a = codebook[codebook$Variable == var, "Variable Label"][1]
print(a)
c = unlist(strsplit(a, ":")); c = c[length(c)]
c = unlist(strsplit(c, " "))[-1]
c = paste(c, collapse = " ")
tmp = c(tmp, c)
}
return(tmp)
}
get_codebook_varnames(var_name = "Begriffe")
get_codebook_varnames(var_name = "Verhaltensweisen")
source("C:/Heroes/keys.R")
source("C:/Heroes/Funktionen.R")
source("C:/Heroes/keys.R")
plot_ranked(data, "Begriffe", mar=c(18,2,3,3))
plot_ranked(data, "Begriffe", mar=c(18,5,3,3))
source("C:/Heroes/Funktionen.R")
plot_ranked(data, "Begriffe", mar=c(18,5,3,3), main="Begriffe")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen")
source("C:/Heroes/Funktionen.R")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen")
source("C:/Heroes/keys.R")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen")
source("C:/Heroes/keys.R")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen")
source("C:/Heroes/keys.R")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen")
source("C:/Heroes/keys.R")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen")
source("C:/Heroes/keys.R")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen")
get_codebook_varnames(var_name = "Informationen")
imp_names[["Informationen"]] = get_codebook_varnames(var_name = "Informationen")
imp_names[["Informationen"]]
imp_names[["Verhaltensweisen"]]
source("C:/Heroes/keys.R")
plot_ranked(data, "Informationen", mar=c(18,5,3,3), main="Informationen")
nchar("Vandalismus, Gewalt gegen Gegenstände")
source("C:/Heroes/keys.R")
plot_ranked(data, "Informationen", mar=c(18,5,3,3), main="Informationen")
source("C:/Heroes/keys.R")
plot_ranked(data, "Informationen", mar=c(18,5,3,3), main="Informationen")
source("C:/Heroes/Funktionen.R")
source("C:/Heroes/keys.R")
library(randomForest)
data = import_data_surv(Path="C:/Heroes/Downloads soscisurvey/CSV/data_HerOEs_2023-08-27_16-42.csv")
# Leute entfernen die nicht mit jM arbeiten:
data = data[-unique(c(which(data$C207_07 == 2), which(data$B101_04 == 2))), ]
# alle offenen Fragen ausgeben:
write.table(unique(data$C202_01), file = "C:/Heroes/Sammlung/C202_01_sonstige_Begriffe.txt", row.names = F, col.names = F)
write.table(unique(data$C206_01), file = "C:/Heroes/Sammlung/C206_01_sonstige_Verhaltensweisen.txt", row.names = F, col.names = F)
write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/D334_01_sonstige_Info_Anmerkung.txt", row.names = F, col.names = F)
write.table(unique(data$D305_01), file = "C:/Heroes/Sammlung/D305_01_sonstige_Dokumente.txt", row.names = F, col.names = F)
write.table(unique(data$D306_11a), file = "C:/Heroes/Sammlung/D306_11a_sonstige_weitereInfos.txt", row.names = F, col.names = F)
write.table(unique(data$D311_01), file = "C:/Heroes/Sammlung/D311_01_sonstige_VerbesserungAnfrage.txt", row.names = F, col.names = F)
write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/D334_01_sonstige_Anmerkung_VerbesserungAnfrage.txt", row.names = F, col.names = F)
write.table(unique(data$E406_09a), file = "C:/Heroes/Sammlung/E406_09a_sonstige_Vetorecht_Aufnahme.txt", row.names = F, col.names = F)
write.table(unique(data$E407_09a), file = "C:/Heroes/Sammlung/E407_09a_sonstige_Vetorempfehlung_Aufnahme.txt", row.names = F, col.names = F)
write.table(unique(data$E403_01), file = "C:/Heroes/Sammlung/E403_01_sonstige_Verb_Aufn_Bez.txt", row.names = F, col.names = F)
write.table(unique(data$F505_01), file = "C:/Heroes/Sammlung/F505_01_sonstige_Verb_Setting.txt", row.names = F, col.names = F)
write.table(unique(data$G603_01), file = "C:/Heroes/Sammlung/G603_01_sonstige_Verb_Alltag.txt", row.names = F, col.names = F)
write.table(unique(data$H704_01), file = "C:/Heroes/Sammlung/H704_01_sonstige_Verb_Krisenbew.txt", row.names = F, col.names = F)
write.table(unique(data$H803_01), file = "C:/Heroes/Sammlung/H803_011_sonstige_Verb_Krisenauf.txt", row.names = F, col.names = F)
write.table(unique(data$I903_01), file = "C:/Heroes/Sammlung/I903_01_sonstige_Verb_Entlassung.txt", row.names = F, col.names = F)
write.table(unique(data$I904_09a), file = "C:/Heroes/Sammlung/I904_09a_sonstige_Vetorecht_Entlassung.txt", row.names = F, col.names = F)
write.table(unique(data$J103_01), file = "C:/Heroes/Sammlung/J103_01_sonstige_Verbesserung_Haltung.txt", row.names = F, col.names = F)
write.table(unique(data$K204_01), file = "C:/Heroes/Sammlung/K204_01_sonstige_Interdisz_Team.txt", row.names = F, col.names = F)
write.table(unique(data$K209_01), file = "C:/Heroes/Sammlung/K209_01_sonstige_Verbesserung_Teamqual_Qualifikation.txt", row.names = F, col.names = F)
write.table(unique(data$N503_01), file = "C:/Heroes/Sammlung/N503_01_sonstige_Anmerkungen_Abschluss.txt", row.names = F, col.names = F)
#  Begriffe:
plot_ranked(data, "Begriffe", mar=c(18,5,3,3), main="Begriffe")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen")
plot_ranked(data, "Informationen", mar=c(18,5,3,3), main="Informationen")
source("C:/Heroes/Funktionen.R")
source("C:/Heroes/keys.R")
library(randomForest)
data = import_data_surv(Path="C:/Heroes/Downloads soscisurvey/CSV/data_HerOEs_2023-08-27_16-42.csv")
# Leute entfernen die nicht mit jM arbeiten:
data = data[-unique(c(which(data$C207_07 == 2), which(data$B101_04 == 2))), ]
# alle offenen Fragen ausgeben:
write.table(unique(data$C202_01), file = "C:/Heroes/Sammlung/C202_01_sonstige_Begriffe.txt", row.names = F, col.names = F)
write.table(unique(data$C206_01), file = "C:/Heroes/Sammlung/C206_01_sonstige_Verhaltensweisen.txt", row.names = F, col.names = F)
write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/D334_01_sonstige_Info_Anmerkung.txt", row.names = F, col.names = F)
write.table(unique(data$D305_01), file = "C:/Heroes/Sammlung/D305_01_sonstige_Dokumente.txt", row.names = F, col.names = F)
write.table(unique(data$D306_11a), file = "C:/Heroes/Sammlung/D306_11a_sonstige_weitereInfos.txt", row.names = F, col.names = F)
write.table(unique(data$D311_01), file = "C:/Heroes/Sammlung/D311_01_sonstige_VerbesserungAnfrage.txt", row.names = F, col.names = F)
write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/D334_01_sonstige_Anmerkung_VerbesserungAnfrage.txt", row.names = F, col.names = F)
write.table(unique(data$E406_09a), file = "C:/Heroes/Sammlung/E406_09a_sonstige_Vetorecht_Aufnahme.txt", row.names = F, col.names = F)
write.table(unique(data$E407_09a), file = "C:/Heroes/Sammlung/E407_09a_sonstige_Vetorempfehlung_Aufnahme.txt", row.names = F, col.names = F)
write.table(unique(data$E403_01), file = "C:/Heroes/Sammlung/E403_01_sonstige_Verb_Aufn_Bez.txt", row.names = F, col.names = F)
write.table(unique(data$F505_01), file = "C:/Heroes/Sammlung/F505_01_sonstige_Verb_Setting.txt", row.names = F, col.names = F)
write.table(unique(data$G603_01), file = "C:/Heroes/Sammlung/G603_01_sonstige_Verb_Alltag.txt", row.names = F, col.names = F)
write.table(unique(data$H704_01), file = "C:/Heroes/Sammlung/H704_01_sonstige_Verb_Krisenbew.txt", row.names = F, col.names = F)
write.table(unique(data$H803_01), file = "C:/Heroes/Sammlung/H803_011_sonstige_Verb_Krisenauf.txt", row.names = F, col.names = F)
write.table(unique(data$I903_01), file = "C:/Heroes/Sammlung/I903_01_sonstige_Verb_Entlassung.txt", row.names = F, col.names = F)
write.table(unique(data$I904_09a), file = "C:/Heroes/Sammlung/I904_09a_sonstige_Vetorecht_Entlassung.txt", row.names = F, col.names = F)
write.table(unique(data$J103_01), file = "C:/Heroes/Sammlung/J103_01_sonstige_Verbesserung_Haltung.txt", row.names = F, col.names = F)
write.table(unique(data$K204_01), file = "C:/Heroes/Sammlung/K204_01_sonstige_Interdisz_Team.txt", row.names = F, col.names = F)
write.table(unique(data$K209_01), file = "C:/Heroes/Sammlung/K209_01_sonstige_Verbesserung_Teamqual_Qualifikation.txt", row.names = F, col.names = F)
write.table(unique(data$N503_01), file = "C:/Heroes/Sammlung/N503_01_sonstige_Anmerkungen_Abschluss.txt", row.names = F, col.names = F)
#  Begriffe:
plot_ranked(data, "Begriffe", mar=c(18,5,3,3), main="Begriffe")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen")
plot_ranked(data, "Informationen", mar=c(18,5,3,3), main="Informationen")
setwd("C:/Heroes/")
source("C:/Heroes/Funktionen.R")
source("C:/Heroes/keys.R")
library(randomForest)
data = import_data_surv(Path="C:/Heroes/Downloads soscisurvey/CSV/data_HerOEs_2023-08-27_16-42.csv")
# Leute entfernen die nicht mit jM arbeiten:
data = data[-unique(c(which(data$C207_07 == 2), which(data$B101_04 == 2))), ]
# alle offenen Fragen ausgeben:
# write.table(unique(data$C202_01), file = "C:/Heroes/Sammlung/C202_01_sonstige_Begriffe.txt", row.names = F, col.names = F)
# write.table(unique(data$C206_01), file = "C:/Heroes/Sammlung/C206_01_sonstige_Verhaltensweisen.txt", row.names = F, col.names = F)
# write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/D334_01_sonstige_Info_Anmerkung.txt", row.names = F, col.names = F)
# write.table(unique(data$D305_01), file = "C:/Heroes/Sammlung/D305_01_sonstige_Dokumente.txt", row.names = F, col.names = F)
# write.table(unique(data$D306_11a), file = "C:/Heroes/Sammlung/D306_11a_sonstige_weitereInfos.txt", row.names = F, col.names = F)
# write.table(unique(data$D311_01), file = "C:/Heroes/Sammlung/D311_01_sonstige_VerbesserungAnfrage.txt", row.names = F, col.names = F)
# write.table(unique(data$D334_01), file = "C:/Heroes/Sammlung/D334_01_sonstige_Anmerkung_VerbesserungAnfrage.txt", row.names = F, col.names = F)
# write.table(unique(data$E406_09a), file = "C:/Heroes/Sammlung/E406_09a_sonstige_Vetorecht_Aufnahme.txt", row.names = F, col.names = F)
# write.table(unique(data$E407_09a), file = "C:/Heroes/Sammlung/E407_09a_sonstige_Vetorempfehlung_Aufnahme.txt", row.names = F, col.names = F)
# write.table(unique(data$E403_01), file = "C:/Heroes/Sammlung/E403_01_sonstige_Verb_Aufn_Bez.txt", row.names = F, col.names = F)
# write.table(unique(data$F505_01), file = "C:/Heroes/Sammlung/F505_01_sonstige_Verb_Setting.txt", row.names = F, col.names = F)
# write.table(unique(data$G603_01), file = "C:/Heroes/Sammlung/G603_01_sonstige_Verb_Alltag.txt", row.names = F, col.names = F)
# write.table(unique(data$H704_01), file = "C:/Heroes/Sammlung/H704_01_sonstige_Verb_Krisenbew.txt", row.names = F, col.names = F)
# write.table(unique(data$H803_01), file = "C:/Heroes/Sammlung/H803_011_sonstige_Verb_Krisenauf.txt", row.names = F, col.names = F)
# write.table(unique(data$I903_01), file = "C:/Heroes/Sammlung/I903_01_sonstige_Verb_Entlassung.txt", row.names = F, col.names = F)
# write.table(unique(data$I904_09a), file = "C:/Heroes/Sammlung/I904_09a_sonstige_Vetorecht_Entlassung.txt", row.names = F, col.names = F)
# write.table(unique(data$J103_01), file = "C:/Heroes/Sammlung/J103_01_sonstige_Verbesserung_Haltung.txt", row.names = F, col.names = F)
# write.table(unique(data$K204_01), file = "C:/Heroes/Sammlung/K204_01_sonstige_Interdisz_Team.txt", row.names = F, col.names = F)
# write.table(unique(data$K209_01), file = "C:/Heroes/Sammlung/K209_01_sonstige_Verbesserung_Teamqual_Qualifikation.txt", row.names = F, col.names = F)
# write.table(unique(data$N503_01), file = "C:/Heroes/Sammlung/N503_01_sonstige_Anmerkungen_Abschluss.txt", row.names = F, col.names = F)
#  Begriffe:
plot_ranked(data, "Begriffe", mar=c(18,5,3,3), main="Begriffe")
plot_ranked(data, "Vetor.Auf", mar=c(18,5,3,3), main="Vetor.Auf")
data = data
var_name = "Vetor.Auf"
mar=c(18,5,3,3)
main="Vetor.Auf"
ranked = get_ranking(data, var_name)
df_begr = data.frame("mean"=apply(data[,keys[[var_name]]], 2, mean, na.rm=T), "name"=imp_names[[var_name]])
apply(data[,keys[[var_name]]], 2, mean, na.rm=T)
imp_names[[var_name]]
source("C:/Heroes/Funktionen.R")
plot_ranked(data, "Begriffe", mar=c(18,5,3,3), main="Begriffe", file="C:/Heroes/Ergebnisse/PDF/test/test.pdf")
source("C:/Heroes/Funktionen.R")
plot_ranked(data, "Begriffe", mar=c(18,5,3,3), main="Begriffe", file="C:/Heroes/Ergebnisse/PDF/test/test.pdf")
source("C:/Heroes/Funktionen.R")
plot_ranked(data, "Begriffe", mar=c(18,5,3,3), main="Begriffe", file="C:/Heroes/Ergebnisse/PDF/test/test.pdf")
plot_ranked(data, "Begriffe", mar=c(18,5,3,3), main="Begriffe", file="C:/Heroes/Ergebnisse/PDF/test/test.pdf")
plot_ranked(data, "Verhaltensweisen", mar=c(18,5,3,3), main="Verhaltensweisen", file="C:/Heroes/Ergebnisse/PDF/test/test.pdf")
source("C:/Heroes/Funktionen.R")
plot_ranked(data, "Begriffe",
yx= c("nie", "selten", "häufig", "immer"),
mar=c(18,5,3,3),
main="Begriffe",
file="C:/Heroes/Ergebnisse/PDF/test/test.pdf")
source("C:/Heroes/Funktionen.R")
plot_ranked(data, "Begriffe",
yx= c("nie", "selten", "häufig", "immer"),
mar=c(18,5,3,3),
main="Begriffe",
file="C:/Heroes/Ergebnisse/PDF/test/test.pdf")
